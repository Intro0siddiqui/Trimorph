#!/bin/bash
set -euo pipefail

# Check for potential dependency conflicts before installing a package

# --- Self-locating Script ---
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)

# Allow overriding paths for testing, with sensible defaults
TRIMORPH_ETC_DIR="${TRIMORPH_ETC_DIR:-/etc/trimorph}"
TRIMORPH_BASE_DIR="${TRIMORPH_BASE_DIR:-/usr/local/trimorph/base}"
TRIMORPH_CACHE_DIR="${TRIMORPH_CACHE_DIR:-/var/cache/trimorph/packages}"

# Check required arguments
if [[ $# -lt 2 ]]; then
    echo "Usage: $0 <jail> <package>"
    exit 1
fi

jail="$1"
package="$2"

# Ensure configuration directory exists
config_dir="${TRIMORPH_ETC_DIR}/jails.d"
if [[ ! -d "$config_dir" ]]; then
    echo "Error: Configuration directory does not exist: $config_dir"
    echo "Please create the directory and add jail configuration files"
    exit 1
fi

conf="${TRIMORPH_ETC_DIR}/jails.d/$jail.conf"
if [[ ! -r "$conf" ]]; then
    echo "[FAIL] Config file not found or not readable: $conf"
    exit 1
fi

# Source configuration
source <($SCRIPT_DIR/../sbin/trimorph-parse-conf "$conf")

echo "Checking dependencies and potential conflicts for package '$package' from jail '$jail'..."
echo

# First validate that the package exists
if ! "$SCRIPT_DIR/../sbin/trimorph-validate" "$jail" "$package" >/dev/null 2>&1; then
    echo "Error: Package '$package' not found in jail '$jail'"
    exit 1
fi

# Display dependency information
echo "Dependency information for '$package':"
case "$TRIMORPH_pkgmgr" in
    *apt)
        # Create a temporary overlay to query dependencies
        work_dir=$(mktemp -d "/tmp/trimorph_deps_${jail}_XXXXXX")
        trap 'rm -rf "$work_dir"' EXIT

        base_root="${TRIMORPH_BASE_DIR}/$jail"
        overlay_upper="${TRIMORPH_CACHE_DIR}/tmp_${jail}_deps_$$"
        overlay_work="${TRIMORPH_CACHE_DIR}/tmp_${jail}_work_$$"

        sudo mkdir -p "$overlay_upper" "$overlay_work"
        sudo chown "$(id -u):$(id -g)" "$overlay_upper" "$overlay_work"

        echo "Dependencies:"
        sudo systemd-nspawn \
            --quiet \
            --directory="$TRIMORPH_root" \
            --overlay="${base_root}:${overlay_upper}:${overlay_work}" \
            --bind-ro=/etc/resolv.conf \
            --bind=/tmp/.X11-unix \
            --bind=/dev/dri \
            --setenv=DEBIAN_FRONTEND=noninteractive \
            $TRIMORPH_pkgmgr $TRIMORPH_pkgmgr_args depends "$package" 2>/dev/null || \
            echo "  (no dependency info available)"

        # Clean up
        sudo rm -rf "$overlay_upper" "$overlay_work"
        ;;
    *pacman)
        echo "Dependencies:"
        sudo systemd-nspawn \
            --quiet \
            --directory="$TRIMORPH_root" \
            --overlay="${base_root}:${overlay_upper}:${overlay_work}" \
            --bind-ro=/etc/resolv.conf \
            --bind=/tmp/.X11-unix \
            --bind=/dev/dri \
            --setenv=LANG=C.UTF-8 \
            $TRIMORPH_pkgmgr $TRIMORPH_pkgmgr_args -Si "$package" 2>/dev/null | grep -E "(Depends On|Optional Deps|Required By|Optional For)" || \
            echo "  (no dependency info available)"
        ;;
    *xbps)
        echo "Dependencies:"
        sudo systemd-nspawn \
            --quiet \
            --directory="$TRIMORPH_root" \
            --overlay="${base_root}:${overlay_upper}:${overlay_work}" \
            --bind-ro=/etc/resolv.conf \
            --bind=/tmp/.X11-unix \
            --bind=/dev/dri \
            $TRIMORPH_pkgmgr $TRIMORPH_pkgmgr_args -x "$package" 2>/dev/null || \
            echo "  (no dependency info available)"
        ;;
    *apk)
        echo "Dependencies:"
        sudo systemd-nspawn \
            --quiet \
            --directory="$TRIMORPH_root" \
            --overlay="${base_root}:${overlay_upper}:${overlay_work}" \
            --bind-ro=/etc/resolv.conf \
            --bind=/tmp/.X11-unix \
            --bind=/dev/dri \
            $TRIMORPH_pkgmgr $TRIMORPH_pkgmgr_args info -e "$package" 2>/dev/null || \
            echo "  (no dependency info available)"
        ;;
    *)
        echo "Unsupported package manager: $TRIMORPH_pkgmgr"
        exit 1
        ;;
esac

echo
echo "Potential conflicts with host system:"
echo "  - Installing packages from foreign package managers may conflict with Portage packages"
echo "  - Dependencies installed may overwrite or conflict with existing system files"
echo "  - Library version conflicts may occur"
echo "  - Use 'trimorph-dry-run $jail $package' to preview what files would be installed"
echo
echo "Recommendation:"
echo "  - Review the package and its dependencies carefully"
echo "  - Consider if the functionality is available through Portage first"
echo "  - Test in a safe environment if possible"